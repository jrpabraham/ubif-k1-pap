lm(y ~ t1 + t2, data = exp_data)
packages <- c("haven", "dplyr", "foreign")
lapply(packages, library, character.only = TRUE)
# Load data
cars_data <- read_dta("auto.dta")
setwd(".")
packages <- c("haven", "dplyr", "foreign")
lapply(packages, library, character.only = TRUE)
# Load data
cars_data <- read_dta("auto.dta")
# Load data
setwd(".")
packages <- c("haven", "dplyr", "foreign")
lapply(packages, library, character.only = TRUE)
# Load data
cars_data <- read_dta("auto.dta")
## Matrix Operations ##
C <- matrix(1:9, ncol = 3)
det(C)
eigen(C)
dataObject <- tbl_df(as.data.frame(C))
forCombine <- matrix(1:3, nrow = 3)
combinedData <- bind_cols(dataObject, tbl_df(as.data.frame(forCombine)))
## Simulating Data ##
set.seed(2098337574)
pop <- 1:20
sample <- sample(pop, size = 10)
coin <- sample(c(0,1), size = 1000, replace = TRUE, prob = c(0.5, 0.5))
mean(coin)
norm <- rnorm(1000)
## Problem Set ##
(x <- t(c(12, 3)))
(y <- t(c(2, 3, 4)))
(z <- c(3, 5, 7))
A <- diag(1)
all(solve(t(A)) == t(solve(A)))
getwd()
download.file(http://www.stata-press.com/data/r9/auto.dta)
download.file("http://www.stata-press.com/data/r9/auto.dta")
download.file("http://www.stata-press.com/data/r9/auto.dta", ".")
lapply(packages, library, character.only = TRUE)
lapply(packages, library, character.only = TRUE)
z0
n <- 500                    # No. of observations
t <- rbinom(n, 1, 0.5)      # Treatment dummy
x1 <- rnorm(n)              # First covariate unrelated to treatment
x0 <- (0.5 * t) + rnorm(n)  # Second covariate correlated w treatment
z0 <- as.numeric(x0 >= median(x0)) # Create median split dummies
z1 <- as.numeric(x1 >= median(x1))
z0
z1
z0 <- z0 - mean(z0)                # Demean the dummies
z1 <- z1 - mean(z1)
z0
z1
?install.packages
?stargazer
?stargazer()
??stargazer
sample
?sample()
?rnorm()
norm <- rnorm(OBS)
norm <- rnorm(Obs)
norm <- rnorm(10)
norm
?e()
?exp()
LnInc <- rnorm(1000, mean = 200, sd = 50)
Inc <- exp(LnInc)
?hist
hist(LnInc)
hist(Inc)
?hist
hist(Inc, freq)
hist(Inc, freq=TRUE)
?hist
hist(Inc, freq=TRUE, breaks=20)
hist(Inc, freq=TRUE, breaks=100)
Inc
LnInc <- rnorm(OBS, mean = 100, sd = 25)
Inc <- exp(LnInc)
LnInc <- rnorm(1000, mean = 100, sd = 25)
Inc <- exp(LnInc)
LnInc
hist(LnInc)
hist(Inc)
?exp
exp(20)
LnInc <- rnorm(1000, mean = 1, sd = 0.25)
Inc <- exp(LnInc)
hist(Inc)
hist(LnInc, freq=TRUE)
hist(Inc, freq=TRUE)
LnInc <- rnorm(1000, mean = 5, sd = 1)
Inc <- exp(LnInc)
hist(Inc, freq=TRUE)
mean(Inc)
median(Inc)
SimTreat
#Create locals for simulation
OBS <- 1000
TE  <- .8
HET <- .4
#Generate treatment
Treat <- sample(0:1,OBS,rep = TRUE,prob = c(.5,.5)) %>%
factor(levels = c(0,1), labels = c("Control","Treatment"))
#Generate gender
Gen <- sample(0:1,OBS,rep = TRUE,prob = c(.5,.5))  %>%
factor(levels = c(0,1), labels = c("Male","Female"))
#Generate factor variable measuring highest level of education
Edu <- sample(1:3,OBS,rep = TRUE,prob = c(.5,.3,.2)) %>%
factor(levels = c(1,2,3), labels = c("Primary school","High school","University & above"))
#Generate income
LnInc <- rnorm(OBS, mean = 5, sd = 1)
Inc <- exp(LnInc)
#Generate y with notreatment effect
y_nottreat <- rnorm(OBS, 0, 1)
#Generate outcome with noisy treatment effect of ___
y_Teffect <- rnorm(OBS, TE, 1)
y_Teffect[Treat == "Control"] <- 0
y_treated = y_nottreat + y_Teffect
#Generate outcome with noisy treatment effect of ___ and noisy het of ___ gender
y_GenTeffect <- rnorm(OBS, HET, 1)
y_GenTeffect[Treat == "Control"] <- 0
y_GenTeffect[Gen == "Male"] <- 0
y_HetTreated <- y_treated + y_GenTeffect
#Create, save dataframe
SimTreat <- data.frame(Treat, Gen, Edu, Inc, y_nottreat, y_treated, y_HetTreated)
save(SimTreat,file = "SimTreat.Rda")
attach(SimTreat)
?ftable
ftable(Treat, Gen)
#Create locals for simulation
OBS <- 1000
TE  <- .8
HET <- .4
#Generate treatment
Treat <- sample(0:1,OBS,rep = TRUE,prob = c(.5,.5)) %>%
factor(levels = c(0,1), labels = c("Control","Treatment"))
#Generate gender
Gen <- sample(0:1,OBS,rep = TRUE,prob = c(.5,.5))  %>%
factor(levels = c(0,1), labels = c("Male","Female"))
ftable(Treat, Gen)
Treat <- sample(0:1,OBS,rep = TRUE,prob = c(.5,.5))
Gen <- sample(0:1,OBS,rep = TRUE,prob = c(.5,.5))
ftable(Treat, Gen)
OBS <- 1000
TE  <- .8
HET <- .4
#Generate treatment
Treat <- sample(0:1,OBS,rep = TRUE,prob = c(.5,.5))
ftable(Treat)
OBS <- 1000
TE  <- .8
HET <- .4
#Generate income
LnInc <- rnorm(OBS, mean = 5, sd = 1)
Inc <- exp(LnInc)
#Generate y with notreatment effect
y_nottreat <- rnorm(OBS, 0, 1)
#Generate outcome with noisy treatment effect of ___
y_Teffect <- rnorm(OBS, TE, 1)
y_Teffect[Treat == "Control"] <- 0
y_treated = y_nottreat + y_Teffect
#Generate outcome with noisy treatment effect of ___ and noisy het of ___ gender
y_GenTeffect <- rnorm(OBS, HET, 1)
y_GenTeffect[Treat == "Control"] <- 0
y_GenTeffect[Gen == "Male"] <- 0
y_HetTreated <- y_treated + y_GenTeffect
Treat <- sample(0:1,OBS,rep = TRUE,prob = c(.5,.5))
Gen <- sample(0:1,OBS,rep = TRUE,prob = c(.5,.5))
Edu <- sample(1:3,OBS,rep = TRUE,prob = c(.5,.3,.2))
SimTreat <- data.frame(Treat, Gen, Edu, Inc, y_nottreat, y_treated, y_HetTreated)
table(SimTreat$Treat)
stargazer(table(SimTreat$Treat))
library(stargazer)
table(SimTreat$Treat)
stargazer(table(SimTreat$Treat))
table <- table(SimTreat$Treat)
table
stargazer(table)
table(Treat)
xtable(table(Treat))
library(xtable)
xtable(table(Treat))
print(xtable(table(Treat)))
?xtable
NoTreReg <- lm(y_nottreat ~ Treat)
NoTreReg
#Reg with no treatment effect
NoTreReg <- lm(y_nottreat ~ Treat)
summary(NoTreReg)
#Reg with treatment effect
TreReg <- lm(y_treated ~ Treat)
summary(TreReg)
#Controlling for Education
TreRegEdu <- lm(y_treated ~ Treat + Gen + Edu)
summary(TreRegEdu)
#Het effects with Gen
TreRegHet <- lm(y_HetTreated ~ Treat*Gen + Edu)
summary(TreRegHet)
#Het effects with Gen and robust SE
TreRegHet$robse <- vcovHC(TreRegHet, type = "HC1")
TreRegHetRobSE <- coeftest(TreRegHet,TreRegHet$robse)
TreRegHetRobSE
required.packages <- c("dplyr", "lmtest", "sandwich", "stargazer", "ggplot2", "xtable", "pwr", "wesanderson", "extrafont", "car")
lapply(required.packages, library, character.only = TRUE)
#Reg with no treatment effect
NoTreReg <- lm(y_nottreat ~ Treat)
summary(NoTreReg)
#Reg with treatment effect
TreReg <- lm(y_treated ~ Treat)
summary(TreReg)
#Controlling for Education
TreRegEdu <- lm(y_treated ~ Treat + Gen + Edu)
summary(TreRegEdu)
#Het effects with Gen
TreRegHet <- lm(y_HetTreated ~ Treat*Gen + Edu)
summary(TreRegHet)
#Het effects with Gen and robust SE
TreRegHet$robse <- vcovHC(TreRegHet, type = "HC1")
TreRegHetRobSE <- coeftest(TreRegHet,TreRegHet$robse)
TreRegHetRobSE
TreRegHet
TreRegHetRobSE
?lm
?coeftest
?vcovHC
l
?lm
read_chunk('K1.R')
install.packages(knitr)
q()
library(knitr)
read_chunk('K1.r')
l
ls
wd()
cwd()
cwd
setwd()
?setwd
getwd
getwd()
parent.frame(1)
parent.frame(2)
parent.frame(3)
getwd()
?vcovHC
??vcovHC
??require
The goal of this Poverty Alleviation Organization is to alleviate poverty and reduce financial hardship among the poor. This organization believes that people living in poverty should be given income support to help them meet their basic needs. This organization aims to help promote a decent standard of living among the poor and help them deal with emergencies. Thus, the Poverty Alleviation Organization gives financial assistance to people like you, to help them make ends meet. For example, with the financial assistance, people might be able to struggle less to afford basic needs, like paying off debts, paying rent, and buying clothes and food. Now we are going to send you 400 KSh. Please note that this is a one-time transfer of financial assistance.
setwd("/Users/Justin/Google Drive/UBIF/UBIF_Deliverables/UBIF_PAP/K1_PAP")
# Check for packages. Install missing packages.
required.packages <- c("knitr", "dplyr", "lmtest", "sandwich", "stargazer", "ggplot2", "xtable", "pwr", "wesanderson", "extrafont", "car")
packages.missing <- required.packages[!required.packages %in% installed.packages()[,"Package"]]
if(length(packages.missing) > 0) {install.packages(required.packages, repo="https://cran.cnr.berkeley.edu/")}
lapply(required.packages, library, character.only = TRUE)
OBS <- 1000
TE  <- .8
HET <- .4
#Generate treatment
Treat <- sample(0:1,OBS,rep = TRUE,prob = c(.5,.5)) %>%
factor(levels = c(0,1), labels = c("Control","Treatment"))
#Generate gender
Gen <- sample(0:1,OBS,rep = TRUE,prob = c(.5,.5))  %>%
factor(levels = c(0,1), labels = c("Male","Female"))
#Generate factor variable measuring highest level of education
Edu <- sample(1:3,OBS,rep = TRUE,prob = c(.5,.3,.2)) %>%
factor(levels = c(1,2,3), labels = c("Primary school","High school","University & above"))
#Generate income
LnInc <- rnorm(OBS, mean = 5, sd = 1)
Inc <- exp(LnInc)
#Generate y with notreatment effect
y_nottreat <- rnorm(OBS, 0, 1)
#Generate outcome with noisy treatment effect of ___
y_Teffect <- rnorm(OBS, TE, 1)
y_Teffect[Treat == "Control"] <- 0
y_treated = y_nottreat + y_Teffect
#Generate outcome with noisy treatment effect of ___ and noisy het of ___ gender
y_GenTeffect <- rnorm(OBS, HET, 1)
y_GenTeffect[Treat == "Control"] <- 0
y_GenTeffect[Gen == "Male"] <- 0
y_HetTreated <- y_treated + y_GenTeffect
TreRegEdu <- lm(y_treated ~ Treat + Gen + Edu)
TreRegEdu
nrow(Tre)
nrow(TreRegEdu)
ncol(TreRegEdu)
coeftest(TreRegEdu)
nrow(coeftest(TreRegEdu))
result <- coeftest(TreRegEdu)
result
rowname(result)
rownames(result)
colnames(result)
??linearHypothesis()
test2 <- linearHypothesis(TreRegEdu, "GenFemale = 0")
test2
test2 <- linearHypothesis(TreRegEdu, "GenFemale = 0", vcov. = vcovHC(TreRegEdu, type = "HC1"))
test2
test2[2, 3]
test2[2, 4]
TreRegEdu
??lm()
coefficients(TreRegEdu)
coefficients(TreRegEdu)[1,1]
R <- coefficients(TreRegEdu)
R
nrow(R)
ncol(R)
TreRegEdu$coefficients
R <- TreRegEdu$coefficients
R
R[1,1]
R["GenFemale"]
2 + R["GenFemale"]
R
S <- R * c(1, 0, 0, 0, 0)
S
S <- R * rbind(1, 0, 0, 0, 0)
S
T <- rbind(1, 0, 0, 0, 0)
T
S <- R %*% T
S
T <- cbind(1, 0, 0, 0, 0)
R <- t(R)
T %*% R
T
R
R <- t(R)
R
T %*% R
R <- TreRegEdu$coefficients
R
R <- t(R)
R
R <- TreRegEdu$coefficients
T %*% R
