k1_df$treat[k1_df$condition == "community"] <- 2
k1_df$treat <- factor(k1_df$treat, labels = c("Pov", "Ind", "Com"))
k1_df$pov <- ifelse(k1_df$condition == "poor", 1, 0)
k1_df$ind <- ifelse(k1_df$condition == "individual", 1, 0)
k1_df$com <- ifelse(k1_df$condition == "community", 1, 0)
k1_df$msg1 <- recode(as.numeric(as.factor(k1_df$ORG_MESSAGE)), `2` = 0, `3` = 2)
k1_df$msg2 <- recode(as.numeric(as.factor(k1_df$ORG_MESSAGE_2)), `2` = 0)
k1_df$msg3 <- recode(as.numeric(as.factor(k1_df$ORG_MESSAGE_3)), `3` = 2)
## Survey meta data ##
k1_df$start.time.mst <- as.POSIXct(as.character(k1_df$V3), format = "%m/%d/%y %H:%M")
k1_df$start.time.eat <- k1_df$start.time.mst + (3600 * 9)
k1_df$end.time.mst <- as.POSIXct(as.character(k1_df$V4), format = "%m/%d/%y %H:%M")
k1_df$end.time.eat <- k1_df$end.time.mst + (3600 * 9)
## Participant ID ##
k1_df$survey.id <- k1_df$V1
k1_df <- k1_df[complete.cases(k1_df$survey.id), ]
nonentry <- c("R_5ZkChbiXDIj6KsK", "R_7N8rNtLsxF5a9on", "R_97Tx2cAjy30fqMR", "R_lYnRvOAJhuax6LS", "R_8dky4iSC7rfEuNc", "R_nczo7KPxLkkKkgo", "R_5j1OiNu3wMp265N", "R_0GYX0scNN16ICfQ", "R_6PoFtAhwvSBNYzi", "R_696kAyWai9bDkFI", "R_hPaLwAaYCnY0l69", "R_oGNBAVexMWYhMml", "R_3rwTGdEULwOGH2y", "R_bhNv0SnArTa32Xe", "R_5txHVIbQY6twLIZ", "R_kaSM6nunZ9Ynatj", "R_0ppcidBVCPaEkXK", "R_oWceQFJG5NnSokN", "R_h5Cw4tvVUeDY8NI", "R_9ib4ASBi450NZPt", "R_mAlfPdxj5GQsJF5", "R_kbW6NDTS1FWXyn3", "R_b1GC7jpoQrJKrFN", "R_5YpNpbPWOxnSNWc", "R_mwLFSjScVyrgs9J", "R_1jbOtmMIrvgTgaE", "R_if5tz3h1N9MzTp2", "R_aFmo1jRrWIwsLjI", "R_2itxVUcUstO3Syp", "R_9LP4exOnWpJ1TrE", "R_cQLu9PDCtFwbn7K", "R_oFl39knSVL3SKpz", "R_11Y1KTzawxBJmvy")
k1_df <- k1_df[!k1_df$survey.id %in% nonentry, ]
## Labelling (as needed)##
## Treatment assignment ##
k1_df$treat[k1_df$condition == "poor"] <- 0
k1_df$treat[k1_df$condition == "individual"] <- 1
k1_df$treat[k1_df$condition == "community"] <- 2
k1_df$treat <- factor(k1_df$treat, labels = c("Pov", "Ind", "Com"))
k1_df$pov <- ifelse(k1_df$condition == "poor", 1, 0)
k1_df$ind <- ifelse(k1_df$condition == "individual", 1, 0)
k1_df$com <- ifelse(k1_df$condition == "community", 1, 0)
k1_df$msg1 <- recode(as.numeric(as.factor(k1_df$ORG_MESSAGE)), `2` = 0, `3` = 2)
k1_df$msg2 <- recode(as.numeric(as.factor(k1_df$ORG_MESSAGE_2)), `2` = 0)
k1_df$msg3 <- recode(as.numeric(as.factor(k1_df$ORG_MESSAGE_3)), `3` = 2)
## Self-efficacy ##
for (var in c(k1_df$sel.con, k1_df$sel.pers, k1_df$sel.com, k1_df$sel.prob, k1_df$sel.bett)) {
var[var < 0] <- NA
}
k1_df$sel.score <- scale(k1_df$sel.con) + scale(k1_df$sel.pers) + scale(k1_df$sel.com) + scale(k1_df$sel.prob) + scale(k1_df$sel.bett)
k1_df$sel.score.z <- scale(k1_df$sel.score)
## Stigma ##
for (var in c(k1_df$jud.fam, k1_df$jud.com, k1_df$jud.judg, k1_df$jud.emb, k1_df$jud.ups)) {
var[var < 0] <- NA
}
k1_df$sti.score <- scale(6 - k1_df$jud.fam) + scale(6 - k1_df$jud.com) + scale(k1_df$jud.judg) + scale(k1_df$jud.emb) + scale(k1_df$jud.ups)
k1_df$sti.score.z <- scale(k1_df$sti.score)
## Affect ##
for (var in c(k1_df$aff.pos, k1_df$aff.ash, k1_df$aff.pow, k1_df$aff.fina)) {
var[var < 0] <- NA
}
k1_df$aff.score <- scale(k1_df$aff.pos) + scale(k1_df$aff.pow) + scale(7 - k1_df$aff.ash) + scale(7 - k1_df$aff.fina)
k1_df$aff.score.z <- scale(k1_df$aff.score)
## Video selection ##
k1_df$vid.imp1 <- k1_df$vid.dec1 %in% c(3, 5)
k1_df$vid.imp2 <- k1_df$vid.dec2 %in% c(3, 5)
k1_df$vid.num <- k1_df$vid.imp1 + k1_df$vid.imp2
## Intertemporal choice ##
k1_df$sav.save <- k1_df$sav.dec > 1
k1_df$sav.save[k1_df$sav.dec < 0] <- NA
k1_df$sav.amt[k1_df$sav.dec == 1] = 0
k1_df$sav.amt[k1_df$sav.dec == 2] = 100
k1_df$sav.amt[k1_df$sav.dec == 3] = 200
k1_df$sav.amt[k1_df$sav.dec < 0] <- NA
## Query theory (savings) ##
que_df <- k1_df[names(k1_df) %in% c("survey.id", "que.rat1", "que.rat2", "que.rat3", "que.rat4", "que.rat5")]
k1_df$que.nonm <- apply(que_df[, 1:5], 1, function(x) length(x[is.na(x) == FALSE]))
que_df <- melt(que_df, id = c("survey.id"))
que_df$variable <- as.numeric(que_df$variable)
que_df <- dcast(que_df[is.na(que_df$value) == FALSE & que_df$value > 0, ], survey.id ~ value, median, value.var = "variable")
names(que_df) <- c("survey.id", "que.mri", "que.mrp")
k1_df <- merge(k1_df, que_df, all.x = TRUE)
k1_df$que.smrd <- (2 * (k1_df$que.mrp - k1_df$que.mri)) / k1_df$que.nonm
k1_df$que.smrd[is.na(k1_df$que.mrp)] <- 1
k1_df$que.smrd[is.na(k1_df$que.mri)] <- -1
# dealing with missing by filling in upper/lower bounds for now
## Message of support ##
k1_df$msg.dec[k1_df$msg.dec < 0] = NA
k1_df$msg.dec <- k1_df$msg.dec - 1
k1_df$msg.emp[k1_df$msg.emp < 0] = NA
k1_df$msg.lik[k1_df$msg.lik < 0] = NA
k1_df$msg.lik <- 7 - k1_df$msg.lik
k1_df$msg.avg <- (k1_df$msg.emp + k1_df$msg.lik) / 2
## Frame evaluation ##
k1_df$eva.poor[k1_df$msg1 == 0] <- k1_df$eva.msg1[k1_df$msg1 == 0]
k1_df$eva.poor[k1_df$msg2 == 0] <- k1_df$eva.msg2[k1_df$msg2 == 0]
k1_df$eva.poor[k1_df$msg3 == 0] <- k1_df$eva.msg3[k1_df$msg3 == 0]
k1_df$eva.ind[k1_df$msg1 == 1] <- k1_df$eva.msg1[k1_df$msg1 == 1]
k1_df$eva.ind[k1_df$msg2 == 1] <- k1_df$eva.msg2[k1_df$msg2 == 1]
k1_df$eva.ind[k1_df$msg3 == 1] <- k1_df$eva.msg3[k1_df$msg3 == 1]
k1_df$eva.com[k1_df$msg1 == 2] <- k1_df$eva.msg1[k1_df$msg1 == 2]
k1_df$eva.com[k1_df$msg2 == 2] <- k1_df$eva.msg2[k1_df$msg2 == 2]
k1_df$eva.com[k1_df$msg3 == 2] <- k1_df$eva.msg3[k1_df$msg3 == 2]
k1_df$eva.vid.poor <- k1_df$eva.rank.vid_8
k1_df$eva.vid.ind <- k1_df$eva.rank.vid_9
k1_df$eva.vid.com <- k1_df$eva.rank.vid_10
k1_df$eva.conf[k1_df$eva.conf < 0] <- NA
k1_df$eva.emp.poor <- k1_df$eva.rank.emp_5
k1_df$eva.emp.ind <- k1_df$eva.rank.emp_6
k1_df$eva.emp.com <- k1_df$eva.rank.emp_7
## Ladder scales ##
k1_df$ses.lad.now[k1_df$ses.lad.now < 0] <- NA
k1_df$ses.lad.now.z <- scale(k1_df$ses.lad.now)
k1_df$ses.lad.y2[k1_df$ses.lad.y2 < 0] <- NA
k1_df$ses.lad.y2.z <- scale(k1_df$ses.lad.y2)
k1_df$ses.lad.diff <- k1_df$ses.lad.y2 - k1_df$ses.lad.now
k1_df$ses.lad.avg <- (k1_df$ses.lad.y2 + k1_df$ses.lad.now) / 2
## Sociodemographics ##
k1_df$soc.age[k1_df$soc.age < 0] <- NA
k1_df$soc.pri <- as.numeric(k1_df$soc.edu > 3)
k1_df$soc.fem <- k1_df$soc.gen - 1
k1_df$soc.fem[k1_df$soc.fem < 0] <- NA
k1_df$soc.chr <- k1_df$soc.rel %in% c(1, 2)
k1_df$ses.unemp <- k1_df$ses.emp %in% c(1, 2)
k1_df$soc.inc[k1_df$soc.inc < 0] <- NA
k1_df$soc.inc.wins[k1_df$soc.inc <= quantile(k1_df$soc.inc, .99)] <- k1_df$soc.inc[k1_df$soc.inc <= quantile(k1_df$soc.inc, .99)]
k1_df$soc.inc.wins.ln <- log(k1_df$soc.inc.wins + sqrt(k1_df$soc.inc.wins^2 + 1))
k1_df$soc.con[k1_df$soc.con < 0] <- NA
k1_df$soc.con.wins[k1_df$soc.con <= quantile(k1_df$soc.con, .99)] <- k1_df$soc.con[k1_df$soc.con <= quantile(k1_df$soc.con, .99)]
k1_df$soc.con.wins.ln <- log(k1_df$soc.con.wins + sqrt(k1_df$soc.con.wins^2 + 1))
k1_df$soc.sav <- k1_df$soc.sav - 1
k1_df$soc.eme.z <- scale(k1_df$soc.eme)
## Survey validity ##
k1_df$end.hear <- k1_df$end.hear - 1
k1_df$end.hear[k1_df$end.hear < 0] <- NA
## Center covariates ##
k1_df$soc.fem.c <- scale(k1_df$soc.fem, scale = FALSE)
k1_df$soc.pri.c <- scale(k1_df$soc.pri, scale = FALSE)
k1_df$soc.age.c <- scale(k1_df$soc.age, scale = FALSE)
k1_df$ses.unemp.c <- scale(k1_df$ses.unemp, scale = FALSE)
write.csv(k1_df, file = "K1_Data.csv", na = "")
attach(k1_df)
mod <- lm(vid.num ~ condition + soc.fem.c, soc.pri.c + soc.age.c + ses.unemp.c, data = k1_df)
print(summary(mod))
mod <- lm(vid.num ~ condition + soc.fem.c, soc.pri.c + soc.age.c + ses.unemp.c, data = k1_df)
mod <- lm(vid.num ~ condition + soc.fem.c + soc.pri.c + soc.age.c + ses.unemp.c, data = k1_df)
print(summary(mod))
mod <- lm(vid.num ~ condition + soc.fem.c + soc.pri.c + soc.age.c + ses.unemp.c, data = k1_df)
print(summary(mod))
kable(tidy(mod), digits = 3)
?tidy
library(broom)
mod <- lm(vid.num ~ condition + soc.fem.c + soc.pri.c + soc.age.c + ses.unemp.c, data = k1_df)
print(summary(mod))
kable(tidy(mod), digits = 3)
mod <- lm(vid.num ~ condition + soc.fem.c + soc.pri.c + soc.age.c + ses.unemp.c, data = k1_df)
print(summary(mod))
ms.vid <- k1_df %>%
filter(!is.na(vid.num))
## Self-efficacy ##
for (var in c(k1_df$sel.con, k1_df$sel.pers, k1_df$sel.com, k1_df$sel.prob, k1_df$sel.bett)) {
var[var < 0] <- NA
}
k1_df$sel.score <- scale(k1_df$sel.con) + scale(k1_df$sel.pers) + scale(k1_df$sel.com) + scale(k1_df$sel.prob) + scale(k1_df$sel.bett)
k1_df$sel.score.z <- scale(k1_df$sel.score)
## Stigma ##
for (var in c(k1_df$jud.fam, k1_df$jud.com, k1_df$jud.judg, k1_df$jud.emb, k1_df$jud.ups)) {
var[var < 0] <- NA
}
k1_df$sti.score <- scale(6 - k1_df$jud.fam) + scale(6 - k1_df$jud.com) + scale(k1_df$jud.judg) + scale(k1_df$jud.emb) + scale(k1_df$jud.ups)
k1_df$sti.score.z <- scale(k1_df$sti.score)
## Affect ##
for (var in c(k1_df$aff.pos, k1_df$aff.ash, k1_df$aff.pow, k1_df$aff.fina)) {
var[var < 0] <- NA
}
k1_df$aff.score <- scale(k1_df$aff.pos) + scale(k1_df$aff.pow) + scale(7 - k1_df$aff.ash) + scale(7 - k1_df$aff.fina)
k1_df$aff.score.z <- scale(k1_df$aff.score)
## Video selection ##
k1_df$vid.imp1 <- k1_df$vid.dec1 %in% c(3, 5)
k1_df$vid.imp2 <- k1_df$vid.dec2 %in% c(3, 5)
k1_df$vid.num <- k1_df$vid.imp1 + k1_df$vid.imp2
## Intertemporal choice ##
k1_df$sav.save <- k1_df$sav.dec > 1
k1_df$sav.save[k1_df$sav.dec < 0] <- NA
k1_df$sav.amt[k1_df$sav.dec == 1] = 0
k1_df$sav.amt[k1_df$sav.dec == 2] = 100
k1_df$sav.amt[k1_df$sav.dec == 3] = 200
k1_df$sav.amt[k1_df$sav.dec < 0] <- NA
## Query theory (savings) ##
que_df <- k1_df[names(k1_df) %in% c("survey.id", "que.rat1", "que.rat2", "que.rat3", "que.rat4", "que.rat5")]
k1_df$que.nonm <- apply(que_df[, 1:5], 1, function(x) length(x[is.na(x) == FALSE]))
que_df <- melt(que_df, id = c("survey.id"))
que_df$variable <- as.numeric(que_df$variable)
que_df <- dcast(que_df[is.na(que_df$value) == FALSE & que_df$value > 0, ], survey.id ~ value, median, value.var = "variable")
names(que_df) <- c("survey.id", "que.mri", "que.mrp")
k1_df <- merge(k1_df, que_df, all.x = TRUE)
k1_df$que.smrd <- (2 * (k1_df$que.mrp - k1_df$que.mri)) / k1_df$que.nonm
k1_df$que.smrd[is.na(k1_df$que.mrp)] <- 1
k1_df$que.smrd[is.na(k1_df$que.mri)] <- -1
# dealing with missing by filling in upper/lower bounds for now
## Message of support ##
k1_df$msg.dec[k1_df$msg.dec < 0] = NA
k1_df$msg.dec <- k1_df$msg.dec - 1
k1_df$msg.emp[k1_df$msg.emp < 0] = NA
k1_df$msg.lik[k1_df$msg.lik < 0] = NA
k1_df$msg.lik <- 7 - k1_df$msg.lik
k1_df$msg.avg <- (k1_df$msg.emp + k1_df$msg.lik) / 2
## Frame evaluation ##
k1_df$eva.poor[k1_df$msg1 == 0] <- k1_df$eva.msg1[k1_df$msg1 == 0]
k1_df$eva.poor[k1_df$msg2 == 0] <- k1_df$eva.msg2[k1_df$msg2 == 0]
k1_df$eva.poor[k1_df$msg3 == 0] <- k1_df$eva.msg3[k1_df$msg3 == 0]
k1_df$eva.ind[k1_df$msg1 == 1] <- k1_df$eva.msg1[k1_df$msg1 == 1]
k1_df$eva.ind[k1_df$msg2 == 1] <- k1_df$eva.msg2[k1_df$msg2 == 1]
k1_df$eva.ind[k1_df$msg3 == 1] <- k1_df$eva.msg3[k1_df$msg3 == 1]
k1_df$eva.com[k1_df$msg1 == 2] <- k1_df$eva.msg1[k1_df$msg1 == 2]
k1_df$eva.com[k1_df$msg2 == 2] <- k1_df$eva.msg2[k1_df$msg2 == 2]
k1_df$eva.com[k1_df$msg3 == 2] <- k1_df$eva.msg3[k1_df$msg3 == 2]
k1_df$eva.vid.poor <- k1_df$eva.rank.vid_8
k1_df$eva.vid.ind <- k1_df$eva.rank.vid_9
k1_df$eva.vid.com <- k1_df$eva.rank.vid_10
k1_df$eva.conf[k1_df$eva.conf < 0] <- NA
k1_df$eva.emp.poor <- k1_df$eva.rank.emp_5
k1_df$eva.emp.ind <- k1_df$eva.rank.emp_6
k1_df$eva.emp.com <- k1_df$eva.rank.emp_7
## Ladder scales ##
k1_df$ses.lad.now[k1_df$ses.lad.now < 0] <- NA
k1_df$ses.lad.now.z <- scale(k1_df$ses.lad.now)
k1_df$ses.lad.y2[k1_df$ses.lad.y2 < 0] <- NA
k1_df$ses.lad.y2.z <- scale(k1_df$ses.lad.y2)
k1_df$ses.lad.diff <- k1_df$ses.lad.y2 - k1_df$ses.lad.now
k1_df$ses.lad.avg <- (k1_df$ses.lad.y2 + k1_df$ses.lad.now) / 2
## Sociodemographics ##
k1_df$soc.age[k1_df$soc.age < 0] <- NA
k1_df$soc.pri <- as.numeric(k1_df$soc.edu > 3)
k1_df$soc.fem <- k1_df$soc.gen - 1
k1_df$soc.fem[k1_df$soc.fem < 0] <- NA
k1_df$soc.chr <- k1_df$soc.rel %in% c(1, 2)
k1_df$ses.unemp <- k1_df$ses.emp %in% c(1, 2)
k1_df$soc.inc[k1_df$soc.inc < 0] <- NA
k1_df$soc.inc.wins[k1_df$soc.inc <= quantile(k1_df$soc.inc, .99)] <- k1_df$soc.inc[k1_df$soc.inc <= quantile(k1_df$soc.inc, .99)]
k1_df$soc.inc.wins.ln <- log(k1_df$soc.inc.wins + sqrt(k1_df$soc.inc.wins^2 + 1))
k1_df$soc.con[k1_df$soc.con < 0] <- NA
k1_df$soc.con.wins[k1_df$soc.con <= quantile(k1_df$soc.con, .99)] <- k1_df$soc.con[k1_df$soc.con <= quantile(k1_df$soc.con, .99)]
k1_df$soc.con.wins.ln <- log(k1_df$soc.con.wins + sqrt(k1_df$soc.con.wins^2 + 1))
k1_df$soc.sav <- k1_df$soc.sav - 1
k1_df$soc.eme.z <- scale(k1_df$soc.eme)
## Survey validity ##
k1_df$end.hear <- k1_df$end.hear - 1
k1_df$end.hear[k1_df$end.hear < 0] <- NA
## Center covariates ##
k1_df$soc.fem.c <- scale(k1_df$soc.fem, scale = FALSE)
k1_df$soc.pri.c <- scale(k1_df$soc.pri, scale = FALSE)
k1_df$soc.age.c <- scale(k1_df$soc.age, scale = FALSE)
k1_df$ses.unemp.c <- scale(k1_df$ses.unemp, scale = FALSE)
write.csv(k1_df, file = "K1_Data.csv", na = "")
attach(k1_df)
head(k1_df$vid.num)
ms.vid <- k1_df %>%
filter(!is.na(vid.num))
ms.vid1 <- k1_df %>%
group_by(condition) %>%
summarise(count = sum(value[vid.num >= 1]))
kable(ms.vid1, digits=3)
#               mean.vid.num                  sd
# |community  |        1.376|              0.703|
# |individual |        1.333|              0.748|
# |poor       |        1.196|              0.736|
#   mutate(vid.perc = ifelse(vid.num %in% 1:2, "1 or More Videos")) %>%
ms.vid <- k1_df %>%
filter(!is.na(vid.num)) %>%
group_by(condition) %>%
summarise("Mean_Num_Vid" = mean(vid.num, na.rm=TRUE),
"ci" =ci(vid.num),
ci.lo = Mean_Rating - ci,
ci.hi = Mean_Rating + ci)
# mutate(vid.perc = ifelse(vid.num >= 1))
kable(ms.vid, digits=3)
head(k1_df$vid.num)
ggplot(ms.vid, aes(x=condition, y=Mean_Num_Vid, fill=condition)) +
geom_bar(position="dodge", stat="identity", width=0.9) +
# geom_errorbar(aes(ymin=sd, ymax=sd),
# width=0.2, position=position_dodge(0.9)) +
coord_cartesian() +
theme(text = element_text(size=15, face="bold")) +
scale_fill_brewer(palette="Paired") +
theme(axis.text.x = element_text(face="bold", size=rel(1.3))) +
labs(fill='Condition') +
xlab("Condition") +
ylab("Mean Number of Skills Building Videos") +
ggtitle("Self-Investment Behaviors: Video Selection by Condition")
ms.vid <- k1_df %>%
filter(!is.na(vid.num)) %>%
group_by(condition) %>%
summarise("Mean_Num_Vid" = mean(vid.num, na.rm=TRUE),
"ci" =ci(vid.num),
ci.lo = Mean_Rating - ci,
ci.hi = Mean_Rating + ci)
ms.vid <- k1_df %>%
filter(!is.na("vid.num"))
describe(k1_df$vid.num)
summary(k1_df$vid.num)
ms.vid <- k1_df %>%
filter(!is.na (vid.num))
ms.vid <- k1_df %>%
drop_na(vid.num)
ms.vid <- k1_df %>%
drop_na(vid.num) %>%
group_by(condition) %>%
summarise("Mean_Num_Vid" = mean(vid.num, na.rm=TRUE),
"ci" =ci(vid.num),
ci.lo = Mean_Rating - ci,
ci.hi = Mean_Rating + ci)
# mutate(vid.perc = ifelse(vid.num >= 1))
kable(ms.vid, digits=3)
sum(is.na(k1_df$vid.num))
ms.vid1 <- k1_df %>%
group_by(condition) %>%
summarise(count = sum(value[vid.num >= 1]))
kable(ms.vid1, digits=3)
#               mean.vid.num                  sd
# |community  |        1.376|              0.703|
# |individual |        1.333|              0.748|
# |poor       |        1.196|              0.736|
#   mutate(vid.perc = ifelse(vid.num %in% 1:2, "1 or More Videos")) %>%
ms.vid <- k1_df %>%
group_by(condition) %>%
summarise("Mean_Num_Vid" = mean(vid.num),
"ci" =ci(vid.num),
ci.lo = Mean_Rating - ci,
ci.hi = Mean_Rating + ci)
# mutate(vid.perc = ifelse(vid.num >= 1))
kable(ms.vid, digits=3)
head(k1_df$vid.num)
ggplot(ms.vid, aes(x=condition, y=Mean_Num_Vid, fill=condition)) +
geom_bar(position="dodge", stat="identity", width=0.9) +
# geom_errorbar(aes(ymin=sd, ymax=sd),
# width=0.2, position=position_dodge(0.9)) +
coord_cartesian() +
theme(text = element_text(size=15, face="bold")) +
scale_fill_brewer(palette="Paired") +
theme(axis.text.x = element_text(face="bold", size=rel(1.3))) +
labs(fill='Condition') +
xlab("Condition") +
ylab("Mean Number of Skills Building Videos") +
ggtitle("Self-Investment Behaviors: Video Selection by Condition")
ms.vid <- k1_df %>%
group_by(condition) %>%
summarise("Mean_Num_Vid" = mean(vid.num),
"ci" =ci(vid.num),
ci.lo = Mean_Num_Vid - ci,
ci.hi = Mean_Num_Vid + ci)
# mutate(vid.perc = ifelse(vid.num >= 1))
kable(ms.vid, digits=3)
ms.vid <- k1_df %>%
group_by(condition) %>%
summarise("Mean_Num_Vid" = mean(vid.num), sd=sd(vid.num))
kable(ms.vid, digits=3)
ms.vid <- k1_df %>%
group_by(condition) %>%
summarise("Mean_Num_Vid" = mean(vid.num), sd=sd(vid.num),
"ci" =ci(vid.num),
ci.lo = Mean_Num_Vid - ci,
ci.hi = Mean_Num_Vid + ci)
# mutate(vid.perc = ifelse(vid.num >= 1))
kable(ms.vid, digits=3)
ms.vid <- k1_df %>%
group_by(condition) %>%
summarise("Mean_Num_Vid" = mean(vid.num), sd=sd(vid.num),
"ci" =ci(vid.num),
ci.lo = Mean_Num_Vid - ci,
ci.hi = Mean_Num_Vid + ci)
kable(ms.vid, digits=3)
sem <- function(x) {sd(x, na.rm=TRUE) / sqrt(length(x))}
ci95.norm <- function(x) {
me <- sem(x) * qnorm(.975)
c(mean(x) - me, mean(x) + me)
}
ci <- function(x) {sem(x) * 1.96}
ms.vid <- k1_df %>%
group_by(condition) %>%
summarise("Mean_Num_Vid" = mean(vid.num), sd=sd(vid.num),
"ci" =ci(vid.num),
ci.lo = Mean_Num_Vid - ci,
ci.hi = Mean_Num_Vid + ci)
# mutate(vid.perc = ifelse(vid.num >= 1))
kable(ms.vid, digits=3)
ms.vid <- k1_df %>%
group_by(condition) %>%
summarise("Mean_Num_Vid" = mean(vid.num, na.rm=TRUE), sd=sd(vid.num, na.rm=TRUE),
"ci" =ci(vid.num),
ci.lo = Mean_Num_Vid - ci,
ci.hi = Mean_Num_Vid + ci)
# mutate(vid.perc = ifelse(vid.num >= 1))
kable(ms.vid, digits=3)
sum(is.na(ms.vid$vid.num))
attach(k1_df)
ms.vid <- k1_df %>%
group_by(condition) %>%
summarise("Mean_Num_Vid" = mean(vid.num, na.rm=TRUE), sd=sd(vid.num, na.rm=TRUE),
"ci" =ci(vid.num),
ci.lo = Mean_Num_Vid - ci,
ci.hi = Mean_Num_Vid + ci)
# mutate(vid.perc = ifelse(vid.num >= 1))
kable(ms.vid, digits=3)
ms.vid <- k1_df %>%
group_by(condition) %>%
summarise("Mean_Num_Vid" = mean(vid.num, na.rm=TRUE), sd=sd(vid.num, na.rm=TRUE),
"ci" =ci(vid.num, na.rm=TRUE),
ci.lo = Mean_Num_Vid - ci,
ci.hi = Mean_Num_Vid + ci)
# mutate(vid.perc = ifelse(vid.num >= 1))
kable(ms.vid, digits=3)
ms.vid <- k1_df %>%
group_by(condition) %>%
summarise("Mean_Num_Vid" = mean(vid.num, na.rm=TRUE), sd=sd(vid.num, na.rm=TRUE),
"ci" =ci(vid.num, na.rm=TRUE))
ms.vid <- k1_df %>%
group_by(condition) %>%
summarise("Mean_Num_Vid" = mean(vid.num, na.rm=TRUE), sd=sd(vid.num, na.rm=TRUE),
"ci" =ci(vid.num))
summary(k1_df$vid.num)
library(Hmisc)
describe(k1_df$vid.num)
summary(lm(vid.num ~ sel.score.z, data=k1_df))
summary(lm(vid.num ~ sti.score.z, data=k1_df))
summary(lm(vid.num ~ aff.score.z, data=k1_df))
summary(lm(vid.num ~ ses.lad.now.z, data=k1_df))
summary(lm(vid.num ~ ses.lad.y2.z, data=k1_df))
summary(lm(vid.num ~ ses.lad.y2, data=k1_df))
ms.sav <- k1_df %>%
group_by(condition) %>%
summarise("Mean_Savings" = mean(sav.amt, na.rm=TRUE), sd=sd(sav.amt, na.rm=TRUE))
# mutate(vid.perc = ifelse(vid.num >= 1))
kable(ms.sav, digits=3)
summary(lm(vid.num ~ sel.score.z, data=k1_df))
summary(lm(vid.num ~ sti.score.z, data=k1_df))
summary(lm(vid.num ~ aff.score.z, data=k1_df))
summary(lm(aff.score.z ~ condition, data=k1_df))
summary(lm(vid.num ~ ses.lad.now.z, data=k1_df))
summary(lm(vid.num ~ ses.lad.y2.z, data=k1_df))
summary(lm(vid.num ~ sti.score.z, data=k1_df))
ms.msg.dec <- k1_df %>%
group_by(condition) %>%
summarise("Mean_Support" = mean(msg.dec, na.rm=TRUE), sd=sd(msg.dec, na.rm=TRUE))
# mutate(vid.perc = ifelse(vid.num >= 1))
kable(ms.msg.dec, digits=3)
summary(k1_df$msg.dec)
describe(k1_df$msg.dec)
head(k1_df$msg.dec)
k1_df$msg.dec[k1_df$msg.dec < 0] = NA
k1_df$msg.dec <- k1_df$msg.dec - 1
ms.msg.dec <- k1_df %>%
group_by(condition) %>%
summarise("Mean_Support" = mean(msg.dec, na.rm=TRUE), sd=sd(msg.dec, na.rm=TRUE))
# mutate(vid.perc = ifelse(vid.num >= 1))
kable(ms.msg.dec, digits=3)
head(k1_df$msg.dec)
k1_df$msg.dec[k1_df$msg.dec < 0] = NA
k1_df$msg.dec <- k1_df$msg.dec - 1
str(k1_df$msg.dec)
summary(lm(ses.lad.now.z ~ sel.score.z, data=k1_df))
summary(lm(ses.lad.now.z ~ sti.score.z, data=k1_df))
summary(lm(ses.lad.y2.z ~ sel.score.z, data=k1_df))
summary(lm(ses.lad.now ~ sel.score, data=k1_df))
summary(lm(ses.lad.y2 ~ sel.score, data=k1_df))
summary(lm(vid.num.z ~ ses.lad.now.z, data=k1_df))
summary(lm(vid.num ~ ses.lad.now, data=k1_df))
summary(lm(vid.num ~ ses.lad.y2, data=k1_df))
summary(lm(vid.num ~ sel.pers, data=k1_df))
summary(lm(vid.num ~ sel.com, data=k1_df))
summary(lm(vid.num ~ sel.con, data=k1_df))
summary(lm(vid.num ~ sel.prob, data=k1_df)) # p
summary(lm(vid.num ~ sel.bett, data=k1_df)) # ns
summary(lm(sel.score.z ~ condition, data=k1_df)) # p=0.03
summary(lm(sel.pers~ condition, data=k1_df)) # ns
summary(lm(sel.com~ condition, data=k1_df))
summary(lm(sel.con ~ condition, data=k1_df))
summary(lm(sel.prob ~ condition, data=k1_df))
summary(lm(sel.bett ~ condition, data=k1_df))
summary(lm(vid.num ~ jud.judg, data=k1_df)) # ns
summary(lm(vid.num ~ jud.emb, data=k1_df)) # ns
summary(lm(vid.num ~ jud.emb, data=k1_df)) # ns
summary(lm(vid.num ~ jud.ups, data=k1_df)) # p=
summary(lm(vid.num ~ jud.fam, data=k1_df)) # ns
summary(lm(vid.num ~ jud.com, data=k1_df)) # ns
ms.vid1 <- k1_df %>%
group_by(condition) %>%
summarise(count = sum(value[vid.num >= 1]))
kable(ms.vid1, digits=3)
ms.vid <- k1_df %>%
group_by(condition) %>%
summarise("Mean_Num_Vid" = mean(vid.num, na.rm=TRUE), sd=sd(vid.num, na.rm=TRUE))
# ,
# "ci" =ci(vid.num),
# ci.lo = Mean_Num_Vid - ci,
# ci.hi = Mean_Num_Vid + ci)
# mutate(vid.perc = ifelse(vid.num >= 1))
kable(ms.vid, digits=3)
ms.vid <- k1_df %>%
group_by(condition) %>%
summarise("Mean_Num_Vid" = mean(vid.num, na.rm=TRUE), sd=sd(vid.num, na.rm=TRUE),
"ci" =ci(vid.num),
ci.lo = Mean_Num_Vid - ci,
ci.hi = Mean_Num_Vid + ci)
ms.vid <- k1_df %>%
group_by(condition) %>%
summarise("Mean_Num_Vid" = mean(vid.num), sd=sd(vid.num),
"ci" =ci(vid.num),
ci.lo = Mean_Num_Vid - ci,
ci.hi = Mean_Num_Vid + ci)
ms.vid <- k1_df %>%
group_by(condition) %>%
summarise("Mean_Num_Vid" = mean(vid.num, na.rm=TRUE), sd=sd(vid.num, na.rm=TRUE),
"ci" =ci(vid.num, na.rm=TRUE),
ci.lo = Mean_Num_Vid - ci,
ci.hi = Mean_Num_Vid + ci)
describe(k1_df$vid.num)
ms.vid <- k1_df %>%
group_by(condition) %>%
summarise("Mean_Num_Vid" = mean(vid.num), sd=sd(vid.num),
"ci" =ci(vid.num))
ms.vid <- k1_df %>%
group_by(condition) %>%
summarise("Mean_Num_Vid" = mean(vid.num), sd=sd(vid.num))
kable(ms.vid, digits=3)
NA!=NA
describe(k1_df$condition)
